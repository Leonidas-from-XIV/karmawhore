# Karmawhore - an IRC karma tracker library #

## Requirements ##

  * leiningen >= 1.4.2
  * Java >= 1.6

Yes, that is all. leiningen can download all dependencies and set up everything
properly.

## Usage ##

    $ lein run [--color] [--html] your-log.file

In the default mode, it generates the distogram to stdout in a text format. It
tries to detect whether it is running an a console and colorizes the output. It
is also possible to force the output of colors using a switch.

HTML output is also supported. In that case the color setting will be ignored
and a HTML file will be output to stdout. Karmawhore ships with a CSS file that
you might want to use, but everyone is free to roll his own styles.

If you are curious, you can also run the unittests by issuing the

    $ lein test

command, which runs karmawhore on a self-test mode checking the features. Don't
worry when some fail, releases should be working just fine. It is mostly a
developer-thingie.

## ChangeLog ##

0.2.4 ("tańcz głupia tańcz")

  * Implemented HTML output + CSS file
  * Added command line argument parsing
  * Colors can get forced on the command line

0.2.3 ("and all you create, and all you destroy")

  * Implemented colors in output

0.2.2 ("we're rocking in our reclining chairs")

  * Improved nick matching, unittests pass now completely
  * Implemented nick normalization, so underscores and similar should
    get folded into the same base nick

0.2.1 ("everything is blue in this world")

  * Support for nick merging using regular expressions
  * Support for blacklisting nicks by regular expressions
  * Support for a configuration file in JSON format
  * Added an example karmawhore.json file

0.2.0 ("you say party, we say die")

  * Support for up- and downvotes
  * Added unittests
  * Added support for leiningen to ease dependency management
  * Retronamed 0.1 release into 0.1.0

0.1.0 ("you got something to say you better jump in my face")

  * Initial release
  * Can parse irssi logfiles
  * Using immutable data structures now
  * Rewrote in Clojure
  * Rewrote in Scheme (Guile)
  * Rewrote in JavaScript (Gjs)
